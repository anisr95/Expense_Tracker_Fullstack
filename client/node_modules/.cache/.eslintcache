[{"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js":"1","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js":"2","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx":"3","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx":"4","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx":"5","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx":"6","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx":"7","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js":"8","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Register.jsx":"9","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Signup.jsx":"10","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Login.jsx":"11"},{"size":1058,"mtime":1656367680331,"results":"12","hashOfConfig":"13"},{"size":1189,"mtime":1656380430445,"results":"14","hashOfConfig":"13"},{"size":1411,"mtime":1656380440364,"results":"15","hashOfConfig":"13"},{"size":8739,"mtime":1656365585131,"results":"16","hashOfConfig":"13"},{"size":4590,"mtime":1656065896707,"results":"17","hashOfConfig":"13"},{"size":3959,"mtime":1656369452588,"results":"18","hashOfConfig":"13"},{"size":1334,"mtime":1656099163467,"results":"19","hashOfConfig":"13"},{"size":106,"mtime":1655367042032,"results":"20","hashOfConfig":"13"},{"size":1044,"mtime":1656385412636,"results":"21","hashOfConfig":"13"},{"size":1574,"mtime":1656395448417,"results":"22","hashOfConfig":"13"},{"size":1569,"mtime":1656395461820,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"1au5gvk",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js",["64","65","66","67","68","69","70"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './App.css'\nimport Nav from './components/Nav/Nav';\nimport Expense from './components/Expense/Expense'\nimport NewExpense from './components/Expense/NewExpense'\nimport EditExpense from './components/Expense/EditExpense'\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n    <BrowserRouter>\n      <App className='App' />\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Routes>\n//       <Route path='/' element={<App />} />\n//       <Route path='/navbar' element={<Nav />} />\n//       <Route path='/expenses' element={<Expense />} />\n//       <Route path='/expenses/:id' element={<EditExpense />} />\n//       <Route path='/expenses/new' element={<NewExpense />} />\n\n//     </Routes>\n\n//   </Router>\n  \n// );\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js",["71","72","73"],[],"import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Nav from './components/Nav/Nav';\nimport Expense from './components/Expense/Expense'\nimport NewExpense from './components/Expense/NewExpense'\nimport EditExpense from './components/Expense/EditExpense'\nimport HomePage from './components/HomePage';\nimport Register from './components/Auth/Register';\n\nfunction App() {\n  return (\n    <>     \n    <Nav />\n  <Routes>\n    <Route path='/' element={<HomePage />}/>\n    <Route path='/auth/register' element={<Register />}/>\n    <Route path='/expenses/:id' element={<EditExpense />} />\n    <Route path='/expenses' element={<Expense />} />\n    <Route path='/expenses/new' element={<NewExpense />} />\n  </Routes>\n  </>\n  );\n}\n\nexport default App;\n\n\n//  <Routes>\n  \n    // {/* <div> */}\n      // {/* <Nav /> */}\n\n\n     \n\n        \n      {/* <Route path='/' element={<App />} /> */}\n      // <Route path='/navbar' element={<Nav />} />\n      // <Route path='/expenses' element={<Expense />} />\n      // <Route path='/expenses/:id' element={<EditExpense />} />\n      // <Route path='/expenses/new' element={<NewExpense />} />\n      \n\n\n\n\n\n    {/* </div> */}\n    //  </Routes> ","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx",["74"],[],"import { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Stack,\n  Toolbar,\n  Tooltip,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport NavContainer from \"../../styles/Nav/Nav.styled\";\n\nconst Nav = () => {\n  return (\n    <>\n      <NavContainer>\n        <Box>\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                Expense Tracker\n              </Typography>\n              <Button component={Link} to=\"/\" color=\"inherit\">\n                Home\n              </Button>\n              <Button component={Link} to=\"/expenses\" color=\"inherit\">\n                Expenses\n              </Button>\n              {/* <Link style={{ textDecoration: \"none\" }} to=\"/expenses\">\n                <Button sx={{ color: \"white\" }} color=\"inherit\">\n                  Expenses\n                </Button>\n              </Link> */}\n              <Button component={Link} to=\"/auth/register\" color=\"inherit\">\n                Login\n              </Button>\n              <Tooltip title=\"Profile\">\n                <IconButton>\n                  <AccountCircleIcon sx={{ color: \"white\" }} />\n                </IconButton>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </NavContainer>\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx",["75","76","77","78","79","80","81","82"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Stack,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Paper,\n  TableBody,\n  IconButton,\n  Icon,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box, Container } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst Expense = () => {\n  const [expenses, setExpenses] = useState([{}]);\n\n  const navigate = useNavigate();\n\n  const deleteExpense = async (id) => {\n    console.log(\"Deletiiiing\");\n    await axios.delete(\"/expenses/\" + id);\n    const filteredExpenses = expenses.filter((expense) => expense._id !== id);\n    setExpenses(filteredExpenses);\n    // window.location.reload();\n    // navigate(0);\n  };\n\n  const getAllExpenses = async () => {\n    console.log(\"I was ran\");\n    const expenses = await axios.get(\"/expenses\");\n    setExpenses(expenses.data);\n    console.log(expenses);\n    console.log(expenses.data);\n\n    // return expenses;\n  };\n\n  useEffect(() => {\n    getAllExpenses();\n    console.log(\"This is useEffect\");\n    // console.log(expenses);\n  }, []);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      <Container>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"2rem\",\n            alignItems: \"center\",\n            //   border: \"2px solid blue\",\n          }}\n        >\n          <Typography letterSpacing={3} variant=\"h2\" color=\"secondary.light\">\n            All Expenses in a Glance\n          </Typography>\n        </Box>\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"flex-end\",\n            alignItems: \"center\",\n            // border: \"1px solid green\",\n            maxWidth: \"1100px\",\n            margin: \"1rem auto\",\n          }}\n        >\n          <Button\n            component={Link}\n            to=\"/expenses/new\"\n            variant=\"contained\"\n            sx={{ marginLeft: \"2rem\" }}\n          >\n            New Expense\n          </Button>\n        </Box>\n\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          {/* Commenting Staaart */}\n          {/* {expenses.map((expense, pos) => (\n          <Card\n            sx={{\n              width: 875,\n              margin: \"1rem\",\n              boxShadow: \"0px 0px 5px rgba(0,0,0,0.3)\",\n            }}\n            key={pos}\n          >\n            {console.log(expense)}\n            <Stack spacing={6}>\n              <CardContent\n                sx={{\n                  margin: \"1rem\",\n                  textAlign: \"center\",\n                }}\n              >\n    \n                <Grid\n                  container\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Grid item xs={12} sm={6} md={4}>\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {expense.item}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={2}>\n                    <Typography color=\"secondary\" variant=\"h6\">\n                      {expense.amount}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Typography color=\"primary.light\" variant=\"h6\">\n                      {moment.utc(String(expense.date)).format(\"DD-MM-YYYY\")}\n                      {console.log(\n                        moment.utc(String(expense.date)).format(\"DD MM YYYY\")\n                      )}\n                      {console.log(expense.date)}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Typography color=\"secondary.light\" variant=\"h6\">\n                      {expense.category}\n                    </Typography>\n                  </Grid> */}\n\n          {/* Commenting Eeeeend */}\n\n          <TableContainer\n            component={Paper}\n            sx={{\n              maxWidth: \"1100px\",\n              marginTop: \"0.5rem\",\n              marginBottom: \"4rem\",\n            }}\n          >\n            <Table aria-label=\"Expenses\">\n              <TableHead>\n                <TableRow sx={{ bgcolor: \"primary.main\", color: \"#fff\" }}>\n                  <TableCell sx={{ color: \"#fff\" }}>Item</TableCell>\n                  <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                    Amount\n                  </TableCell>\n                  <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                    Date\n                  </TableCell>\n                  <TableCell sx={{ color: \"#fff\" }}>Category</TableCell>\n                  <TableCell sx={{ color: \"#fff\" }}>Edit</TableCell>\n                  <TableCell sx={{ color: \"#fff\" }}>Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {expenses.map((expense, pos) => (\n                  <TableRow\n                    key={pos}\n                    sx={{\n                      \"&:last-child td, &last-child th\": { border: 0 },\n                    }}\n                  >\n                    <TableCell>\n                      <Typography\n                        color=\"primary\"\n                        variant=\"subtitle1\"\n                        sx={{ fontWeight: \"400\" }}\n                      >\n                        {expense.item}\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Typography color=\"secondary\" variant=\"subtitle2\">\n                        ${expense.amount}\n                      </Typography>\n                    </TableCell>\n                    <TableCell align=\"left\">\n                      <Typography color=\"primary\" variant=\"p\">\n                        {moment.utc(String(expense.date)).format(\"MM-DD-YYYY\")}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography color=\"secondary.light\" variant=\"p\">\n                        {expense.category}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        component={Link}\n                        sx={{\n                          \"&:hover\": {\n                            color: \"green\",\n                          },\n                        }}\n                        to={`./${expense._id}`}\n                        // href={`expenses/${expense._id}`}\n                      >\n                        {/* <NavLink to={`expenses/${expense._id}`}> */}\n                        {/* <Link to={`./${expense._id}`}> */}\n                        <EditIcon />\n                        {/* </Link> */}\n                        {/* </NavLink> */}\n                      </IconButton>\n                    </TableCell>\n                    <TableCell>\n                      <IconButton\n                        sx={{\n                          \"&:hover\": { color: \"#ee0000\" },\n                        }}\n                        onClick={() => {\n                          deleteExpense(expense._id);\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n\n          {/* ======================== */}\n          {/* <Typography color=\"primary\" variant=\"h4\">\n                {expense.item}\n              </Typography>\n              <Typography color=\"secondary\" variant=\"h6\">\n                {expense.amount}\n              </Typography>\n              <Typography color=\"primary.light\" variant=\"h6\">\n                {expense.date}\n              </Typography>\n              <Typography color=\"secondary.light\" variant=\"h6\">\n                {expense.category}\n              </Typography> */}\n          {/* ======================= */}\n          {/* </Grid> */}\n          {/* </div> */}\n          {/* </Stack> */}\n          {/* {expense.item} {expense.amount} */}\n          {/* </div> */}\n          {/* </CardContent> */}\n          {/* </Stack> */}\n          {/* </Card> */}\n          {/* ))} */}\n        </Box>\n      </Container>\n    </>\n  );\n};\n\nexport default Expense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx",["83","84","85","86"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Nav from \"../Nav/Nav\";\n\nconst EditExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n  const [slicedDate, setSlicedDate] = useState(\"\");\n\n  const params = useParams();\n  const navigate = useNavigate();\n  console.log(params);\n\n  const [expense, setExpense] = useState({});\n\n  const getOneExpense = async (id) => {\n    const oneExpense = await axios.get(\"/expenses/\" + id);\n    setExpense(oneExpense.data);\n    setItem(oneExpense.data.item);\n    setAmount(oneExpense.data.amount);\n    setDate(oneExpense.data.date);\n    setCategory(oneExpense.data.category);\n    setSlicedDate(oneExpense.data.date.slice(0, 10));\n    console.log(\"One Expense: \", oneExpense.data);\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  const submitHandler = () => {\n    const editedProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(\"Edited Product: \" + editedProduct);\n\n    console.log(\"in submitting\" + params.id);\n    console.log(\"Editting\");\n    axios.put(`/expenses/${params.id}/edit`, editedProduct);\n\n    // setItem(\"\");\n    // setAmount(0);\n    // setDate(\"\");\n    // setCategory(\"\");\n    // setCategories(\"\");\n    navigate(\"/expenses\");\n  };\n\n  useEffect(() => {\n    getOneExpense(params.id);\n    getCategories();\n  }, []);\n  console.log(\"Daaaaaatee: \" + slicedDate);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Edit Your Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            // defaultValue={slicedDate}\n            // defaultValue={date.slice(0, 10)}\n            value={date.slice(0, 10)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            value={String(category)}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Edit Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default EditExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx",["87","88","89","90","91","92","93"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Alert,\n  AlertTitle,\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst NewExpense = () => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n\n  const navigate = useNavigate();\n\n  const submitHandler = async () => {\n    const newProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(typeof date);\n\n    console.log(\"Submiting\");\n    await axios.post(\"/expenses/new\", newProduct);\n\n    setItem(\"\");\n    setAmount(0);\n    setDate(\"\");\n    setCategory(\"\");\n    setCategories(\"\");\n\n    navigate(\"/expenses\");\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  useEffect(() => {\n    getCategories();\n    console.log(\"in useEffect\" + categories);\n  }, []);\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Enter A New Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            value={date}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          {/* <TextField\n            variant=\"outlined\"\n            label=\"Category\"\n            onChange={(e) => setCategory(e.target.value)}\n            fullWidth\n            value={category}\n          /> */}\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n            value={category}\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Add New Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default NewExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx",[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js",[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Register.jsx",["94","95","96","97","98","99","100","101","102","103","104"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Navigate, NavLink, useNavigate } from \"react-router-dom\";\n\nimport { Button, Stack, Typography, TextField } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\n\nconst Register = () => {\n  const [haveAccount, setHaveAccount] = useState(true);\n  return (\n    <>\n      <Container>\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          {haveAccount ? (\n            <Login setHaveAccount={setHaveAccount} />\n          ) : (\n            <Signup setHaveAccount={setHaveAccount} />\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Signup.jsx",["105","106","107","108","109"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Login.jsx",["110","111","112","113"],[],{"ruleId":"114","severity":1,"message":"115","line":3,"column":27,"nodeType":"116","messageId":"117","endLine":3,"endColumn":33},{"ruleId":"114","severity":1,"message":"118","line":3,"column":35,"nodeType":"116","messageId":"117","endLine":3,"endColumn":41},{"ruleId":"114","severity":1,"message":"119","line":3,"column":43,"nodeType":"116","messageId":"117","endLine":3,"endColumn":48},{"ruleId":"114","severity":1,"message":"120","line":6,"column":8,"nodeType":"116","messageId":"117","endLine":6,"endColumn":11},{"ruleId":"114","severity":1,"message":"121","line":7,"column":8,"nodeType":"116","messageId":"117","endLine":7,"endColumn":15},{"ruleId":"114","severity":1,"message":"122","line":8,"column":8,"nodeType":"116","messageId":"117","endLine":8,"endColumn":18},{"ruleId":"114","severity":1,"message":"123","line":9,"column":8,"nodeType":"116","messageId":"117","endLine":9,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":33},{"ruleId":"124","severity":1,"message":"125","line":36,"column":7,"nodeType":"126","messageId":"127","endLine":36,"endColumn":51},{"ruleId":"124","severity":1,"message":"125","line":47,"column":5,"nodeType":"126","messageId":"127","endLine":47,"endColumn":19},{"ruleId":"114","severity":1,"message":"128","line":6,"column":3,"nodeType":"116","messageId":"117","endLine":6,"endColumn":8},{"ruleId":"114","severity":1,"message":"129","line":4,"column":16,"nodeType":"116","messageId":"117","endLine":4,"endColumn":23},{"ruleId":"114","severity":1,"message":"130","line":8,"column":3,"nodeType":"116","messageId":"117","endLine":8,"endColumn":7},{"ruleId":"114","severity":1,"message":"131","line":9,"column":3,"nodeType":"116","messageId":"117","endLine":9,"endColumn":14},{"ruleId":"114","severity":1,"message":"132","line":10,"column":3,"nodeType":"116","messageId":"117","endLine":10,"endColumn":7},{"ruleId":"114","severity":1,"message":"128","line":11,"column":3,"nodeType":"116","messageId":"117","endLine":11,"endColumn":8},{"ruleId":"114","severity":1,"message":"133","line":21,"column":3,"nodeType":"116","messageId":"117","endLine":21,"endColumn":7},{"ruleId":"114","severity":1,"message":"120","line":27,"column":8,"nodeType":"116","messageId":"117","endLine":27,"endColumn":11},{"ruleId":"114","severity":1,"message":"134","line":32,"column":9,"nodeType":"116","messageId":"117","endLine":32,"endColumn":17},{"ruleId":"114","severity":1,"message":"120","line":12,"column":8,"nodeType":"116","messageId":"117","endLine":12,"endColumn":11},{"ruleId":"114","severity":1,"message":"135","line":26,"column":10,"nodeType":"116","messageId":"117","endLine":26,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":78,"column":6,"nodeType":"138","endLine":78,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":102,"column":13,"nodeType":"142","messageId":"143","endLine":102,"endColumn":19},{"ruleId":"114","severity":1,"message":"144","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"145","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":19},{"ruleId":"114","severity":1,"message":"146","line":6,"column":3,"nodeType":"116","messageId":"117","endLine":6,"endColumn":8},{"ruleId":"114","severity":1,"message":"147","line":7,"column":3,"nodeType":"116","messageId":"117","endLine":7,"endColumn":13},{"ruleId":"114","severity":1,"message":"120","line":16,"column":8,"nodeType":"116","messageId":"117","endLine":16,"endColumn":11},{"ruleId":"136","severity":1,"message":"148","line":66,"column":6,"nodeType":"138","endLine":66,"endColumn":8,"suggestions":"149"},{"ruleId":"140","severity":1,"message":"141","line":88,"column":13,"nodeType":"142","messageId":"143","endLine":88,"endColumn":19},{"ruleId":"114","severity":1,"message":"150","line":2,"column":20,"nodeType":"116","messageId":"117","endLine":2,"endColumn":29},{"ruleId":"114","severity":1,"message":"151","line":3,"column":8,"nodeType":"116","messageId":"117","endLine":3,"endColumn":13},{"ruleId":"114","severity":1,"message":"144","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":14},{"ruleId":"114","severity":1,"message":"152","line":4,"column":16,"nodeType":"116","messageId":"117","endLine":4,"endColumn":24},{"ruleId":"114","severity":1,"message":"129","line":4,"column":26,"nodeType":"116","messageId":"117","endLine":4,"endColumn":33},{"ruleId":"114","severity":1,"message":"153","line":4,"column":35,"nodeType":"116","messageId":"117","endLine":4,"endColumn":46},{"ruleId":"114","severity":1,"message":"154","line":6,"column":10,"nodeType":"116","messageId":"117","endLine":6,"endColumn":16},{"ruleId":"114","severity":1,"message":"155","line":6,"column":25,"nodeType":"116","messageId":"117","endLine":6,"endColumn":35},{"ruleId":"114","severity":1,"message":"156","line":6,"column":37,"nodeType":"116","messageId":"117","endLine":6,"endColumn":46},{"ruleId":"114","severity":1,"message":"157","line":7,"column":10,"nodeType":"116","messageId":"117","endLine":7,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":25,"column":13,"nodeType":"142","messageId":"143","endLine":25,"endColumn":19},{"ruleId":"114","severity":1,"message":"144","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"152","line":3,"column":16,"nodeType":"116","messageId":"117","endLine":3,"endColumn":24},{"ruleId":"114","severity":1,"message":"129","line":3,"column":26,"nodeType":"116","messageId":"117","endLine":3,"endColumn":33},{"ruleId":"114","severity":1,"message":"158","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":21},{"ruleId":"114","severity":1,"message":"159","line":9,"column":23,"nodeType":"116","messageId":"117","endLine":9,"endColumn":37},{"ruleId":"114","severity":1,"message":"144","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"152","line":3,"column":16,"nodeType":"116","messageId":"117","endLine":3,"endColumn":24},{"ruleId":"114","severity":1,"message":"129","line":3,"column":26,"nodeType":"116","messageId":"117","endLine":3,"endColumn":33},{"ruleId":"114","severity":1,"message":"134","line":10,"column":9,"nodeType":"116","messageId":"117","endLine":10,"endColumn":17},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'Expense' is defined but never used.","'NewExpense' is defined but never used.","'EditExpense' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Stack' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Icon' is defined but never used.","'navigate' is assigned a value but never used.","'expense' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["160"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'Link' is defined but never used.","'useParams' is defined but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["161"],"'useEffect' is defined but never used.","'axios' is defined but never used.","'Navigate' is defined but never used.","'useNavigate' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'haveAccount' is assigned a value but never used.","'setHaveAccount' is assigned a value but never used.",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [params.id]",{"range":"166","text":"167"},"Update the dependencies array to be: [categories]",{"range":"168","text":"169"},[2181,2183],"[params.id]",[1639,1641],"[categories]"]