[{"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js":"1","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js":"2","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx":"3","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx":"4","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx":"5","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx":"6","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js":"7"},{"size":786,"mtime":1655799083305,"results":"8","hashOfConfig":"9"},{"size":1298,"mtime":1655715384422,"results":"10","hashOfConfig":"9"},{"size":8089,"mtime":1655889145605,"results":"11","hashOfConfig":"9"},{"size":1383,"mtime":1655889080489,"results":"12","hashOfConfig":"9"},{"size":4663,"mtime":1655710472117,"results":"13","hashOfConfig":"9"},{"size":3792,"mtime":1655878024332,"results":"14","hashOfConfig":"9"},{"size":106,"mtime":1655367042032,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15o8080",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js",[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js",["39"],[],"import { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Link } from 'react-router-dom';\nimport './App.css'\n\nimport Nav from './components/Nav/Nav';\n\n\n\nfunction App() {\n  return (\n    // <Routes>\n    <div>\n      <Nav />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: 'column',\n          justifyContent: \"center\",\n          marginLeft: '3rem',\n          marginTop: '2rem'\n        }}>\n        <Typography variant='h2' color='primary' gutterBottom>Expense Tracker Project</Typography>\n        <Typography variant='h6' color='secondary'>This is a CRUD (Create, Read, Update, Delete) app, built using MERN stack (MondoDB, Express, React, and Node)</Typography>\n        <Typography gutterBottom variant='h6' color='secondary'>Go to Expenses tab to start</Typography>\n        <Typography variant='p' color='secondary.light'>This project is still not finished, please come back after a few days to see the latest version</Typography>\n        <Typography variant='p' color='secondary.light'>Future updates: Expense Tracker Graph, Login/Logout and user Authentication, Ability to create profile, Becoming more responsive for Mobile and Tablet use, and many more</Typography>\n\n        </Box>\n    </div>\n    // </Routes>\n  );\n}\n\nexport default App;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx",["40","41","42","43","44","45","46"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx",["47"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx",["48","49","50"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Nav from \"../Nav/Nav\";\n\nconst EditExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n  const [slicedDate, setSlicedDate] = useState(\"\");\n\n  const params = useParams();\n  const navigate = useNavigate();\n  console.log(params);\n\n  const [expense, setExpense] = useState({});\n\n  const getOneExpense = async (id) => {\n    const oneExpense = await axios.get(\"http://localhost:3001/expenses/\" + id);\n    setExpense(oneExpense.data);\n    setItem(oneExpense.data.item);\n    setAmount(oneExpense.data.amount);\n    setDate(oneExpense.data.date);\n    setCategory(oneExpense.data.category);\n    setSlicedDate(oneExpense.data.date.slice(0, 10));\n    console.log(\"One Expense: \", oneExpense.data);\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"http://localhost:3001/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  const submitHandler = () => {\n    const editedProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(\"Edited Product: \" + editedProduct);\n\n    console.log(\"in submitting\" + params.id);\n    console.log(\"Editting\");\n    axios.put(\n      `http://localhost:3001/expenses/${params.id}/edit`,\n      editedProduct\n    );\n\n    // setItem(\"\");\n    // setAmount(0);\n    // setDate(\"\");\n    // setCategory(\"\");\n    // setCategories(\"\");\n    navigate(\"/expenses\");\n  };\n\n  useEffect(() => {\n    getOneExpense(params.id);\n    getCategories();\n  }, []);\n  console.log(\"Daaaaaatee: \" + slicedDate);\n\n  return (\n    <>\n      <Nav />\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Edit Your Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            // defaultValue={slicedDate}\n            // defaultValue={date.slice(0, 10)}\n            value={date.slice(0, 10)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            value={String(category)}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Edit Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default EditExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx",["51","52"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":14},{"ruleId":"53","severity":1,"message":"57","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":21},{"ruleId":"53","severity":1,"message":"58","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":8,"endColumn":7},{"ruleId":"53","severity":1,"message":"59","line":9,"column":3,"nodeType":"55","messageId":"56","endLine":9,"endColumn":14},{"ruleId":"53","severity":1,"message":"60","line":10,"column":3,"nodeType":"55","messageId":"56","endLine":10,"endColumn":7},{"ruleId":"53","severity":1,"message":"61","line":11,"column":3,"nodeType":"55","messageId":"56","endLine":11,"endColumn":8},{"ruleId":"53","severity":1,"message":"62","line":21,"column":3,"nodeType":"55","messageId":"56","endLine":21,"endColumn":7},{"ruleId":"53","severity":1,"message":"63","line":48,"column":9,"nodeType":"55","messageId":"56","endLine":48,"endColumn":20},{"ruleId":"53","severity":1,"message":"61","line":6,"column":3,"nodeType":"55","messageId":"56","endLine":6,"endColumn":8},{"ruleId":"53","severity":1,"message":"64","line":26,"column":10,"nodeType":"55","messageId":"56","endLine":26,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":81,"column":6,"nodeType":"67","endLine":81,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":105,"column":13,"nodeType":"71","messageId":"72","endLine":105,"endColumn":19},{"ruleId":"65","severity":1,"message":"73","line":58,"column":6,"nodeType":"67","endLine":58,"endColumn":8,"suggestions":"74"},{"ruleId":"69","severity":1,"message":"70","line":80,"column":13,"nodeType":"71","messageId":"72","endLine":80,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Stack' is defined but never used.","'Icon' is defined but never used.","'editExpense' is assigned a value but never used.","'expense' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["76"],{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [params.id]",{"range":"81","text":"82"},"Update the dependencies array to be: [categories]",{"range":"83","text":"84"},[2262,2264],"[params.id]",[1483,1485],"[categories]"]