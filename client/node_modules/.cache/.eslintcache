[{"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js":"1","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js":"2","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx":"3","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx":"4","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx":"5","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx":"6","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx":"7","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js":"8"},{"size":1023,"mtime":1656065825247,"results":"9","hashOfConfig":"10"},{"size":1080,"mtime":1656313727113,"results":"11","hashOfConfig":"10"},{"size":1398,"mtime":1655890107760,"results":"12","hashOfConfig":"10"},{"size":8739,"mtime":1656365585131,"results":"13","hashOfConfig":"10"},{"size":4590,"mtime":1656065896707,"results":"14","hashOfConfig":"10"},{"size":3936,"mtime":1656069759563,"results":"15","hashOfConfig":"10"},{"size":1334,"mtime":1656099163467,"results":"16","hashOfConfig":"10"},{"size":106,"mtime":1655367042032,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"1au5gvk",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js",["47","48","49","50","51","52","53"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport Nav from './components/Nav/Nav';\nimport Expense from './components/Expense/Expense'\nimport NewExpense from './components/Expense/NewExpense'\nimport EditExpense from './components/Expense/EditExpense'\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Routes>\n//       <Route path='/' element={<App />} />\n//       <Route path='/navbar' element={<Nav />} />\n//       <Route path='/expenses' element={<Expense />} />\n//       <Route path='/expenses/:id' element={<EditExpense />} />\n//       <Route path='/expenses/new' element={<NewExpense />} />\n\n//     </Routes>\n\n//   </Router>\n  \n// );\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js",["54","55","56"],[],"import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Nav from './components/Nav/Nav';\nimport Expense from './components/Expense/Expense'\nimport NewExpense from './components/Expense/NewExpense'\nimport EditExpense from './components/Expense/EditExpense'\nimport HomePage from './components/HomePage';\n\nfunction App() {\n  return (\n    <>     \n    <Nav />\n  <Routes>\n    <Route path='/' element={<HomePage />}/>\n    <Route path='/expenses/:id' element={<EditExpense />} />\n    <Route path='/expenses' element={<Expense />} />\n    <Route path='/expenses/new' element={<NewExpense />} />\n  </Routes>\n  </>\n  );\n}\n\nexport default App;\n\n\n//  <Routes>\n  \n    // {/* <div> */}\n      // {/* <Nav /> */}\n\n\n     \n\n        \n      {/* <Route path='/' element={<App />} /> */}\n      // <Route path='/navbar' element={<Nav />} />\n      // <Route path='/expenses' element={<Expense />} />\n      // <Route path='/expenses/:id' element={<EditExpense />} />\n      // <Route path='/expenses/new' element={<NewExpense />} />\n      \n\n\n\n\n\n    {/* </div> */}\n    //  </Routes> ","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx",["57"],[],"import { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Stack,\n  Toolbar,\n  Tooltip,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport NavContainer from \"../../styles/Nav/Nav.styled\";\n\nconst Nav = () => {\n  return (\n    <>\n      <NavContainer>\n        <Box>\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                Expense Tracker\n              </Typography>\n              <Button component={Link} to=\"/\" color=\"inherit\">\n                Home\n              </Button>\n              <Button component={Link} to=\"/expenses\" color=\"inherit\">\n                Expenses\n              </Button>\n              {/* <Link style={{ textDecoration: \"none\" }} to=\"/expenses\">\n                <Button sx={{ color: \"white\" }} color=\"inherit\">\n                  Expenses\n                </Button>\n              </Link> */}\n              <Button component={Link} to=\"#\" color=\"inherit\">\n                Login\n              </Button>\n              <Tooltip title=\"Profile\">\n                <IconButton>\n                  <AccountCircleIcon sx={{ color: \"white\" }} />\n                </IconButton>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </NavContainer>\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx",["58","59","60","61","62","63","64","65"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx",["66","67","68","69"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Nav from \"../Nav/Nav\";\n\nconst EditExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n  const [slicedDate, setSlicedDate] = useState(\"\");\n\n  const params = useParams();\n  const navigate = useNavigate();\n  console.log(params);\n\n  const [expense, setExpense] = useState({});\n\n  const getOneExpense = async (id) => {\n    const oneExpense = await axios.get(\"/expenses/\" + id);\n    setExpense(oneExpense.data);\n    setItem(oneExpense.data.item);\n    setAmount(oneExpense.data.amount);\n    setDate(oneExpense.data.date);\n    setCategory(oneExpense.data.category);\n    setSlicedDate(oneExpense.data.date.slice(0, 10));\n    console.log(\"One Expense: \", oneExpense.data);\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  const submitHandler = () => {\n    const editedProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(\"Edited Product: \" + editedProduct);\n\n    console.log(\"in submitting\" + params.id);\n    console.log(\"Editting\");\n    axios.put(`/expenses/${params.id}/edit`, editedProduct);\n\n    // setItem(\"\");\n    // setAmount(0);\n    // setDate(\"\");\n    // setCategory(\"\");\n    // setCategories(\"\");\n    navigate(\"/expenses\");\n  };\n\n  useEffect(() => {\n    getOneExpense(params.id);\n    getCategories();\n  }, []);\n  console.log(\"Daaaaaatee: \" + slicedDate);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Edit Your Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            // defaultValue={slicedDate}\n            // defaultValue={date.slice(0, 10)}\n            value={date.slice(0, 10)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            value={String(category)}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Edit Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default EditExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx",["70","71","72","73","74"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst NewExpense = () => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n\n  const navigate = useNavigate();\n\n  const submitHandler = async () => {\n    const newProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(typeof date);\n\n    console.log(\"Submiting\");\n    await axios.post(\"/expenses/new\", newProduct);\n\n    setItem(\"\");\n    setAmount(0);\n    setDate(\"\");\n    setCategory(\"\");\n    setCategories(\"\");\n\n    navigate(\"/expenses\");\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  useEffect(() => {\n    getCategories();\n    console.log(\"in useEffect\" + categories);\n  }, []);\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Enter A New Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            value={date}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          {/* <TextField\n            variant=\"outlined\"\n            label=\"Category\"\n            onChange={(e) => setCategory(e.target.value)}\n            fullWidth\n            value={category}\n          /> */}\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n            value={category}\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Add New Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default NewExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx",[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js",[],[],{"ruleId":"75","severity":1,"message":"76","line":3,"column":27,"nodeType":"77","messageId":"78","endLine":3,"endColumn":33},{"ruleId":"75","severity":1,"message":"79","line":3,"column":35,"nodeType":"77","messageId":"78","endLine":3,"endColumn":41},{"ruleId":"75","severity":1,"message":"80","line":3,"column":43,"nodeType":"77","messageId":"78","endLine":3,"endColumn":48},{"ruleId":"75","severity":1,"message":"81","line":5,"column":8,"nodeType":"77","messageId":"78","endLine":5,"endColumn":11},{"ruleId":"75","severity":1,"message":"82","line":6,"column":8,"nodeType":"77","messageId":"78","endLine":6,"endColumn":15},{"ruleId":"75","severity":1,"message":"83","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":8,"column":8,"nodeType":"77","messageId":"78","endLine":8,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":33},{"ruleId":"85","severity":1,"message":"86","line":34,"column":7,"nodeType":"87","messageId":"88","endLine":34,"endColumn":51},{"ruleId":"85","severity":1,"message":"86","line":45,"column":5,"nodeType":"87","messageId":"88","endLine":45,"endColumn":19},{"ruleId":"75","severity":1,"message":"89","line":6,"column":3,"nodeType":"77","messageId":"78","endLine":6,"endColumn":8},{"ruleId":"75","severity":1,"message":"90","line":4,"column":16,"nodeType":"77","messageId":"78","endLine":4,"endColumn":23},{"ruleId":"75","severity":1,"message":"91","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":7},{"ruleId":"75","severity":1,"message":"92","line":9,"column":3,"nodeType":"77","messageId":"78","endLine":9,"endColumn":14},{"ruleId":"75","severity":1,"message":"93","line":10,"column":3,"nodeType":"77","messageId":"78","endLine":10,"endColumn":7},{"ruleId":"75","severity":1,"message":"89","line":11,"column":3,"nodeType":"77","messageId":"78","endLine":11,"endColumn":8},{"ruleId":"75","severity":1,"message":"94","line":21,"column":3,"nodeType":"77","messageId":"78","endLine":21,"endColumn":7},{"ruleId":"75","severity":1,"message":"81","line":27,"column":8,"nodeType":"77","messageId":"78","endLine":27,"endColumn":11},{"ruleId":"75","severity":1,"message":"95","line":32,"column":9,"nodeType":"77","messageId":"78","endLine":32,"endColumn":17},{"ruleId":"75","severity":1,"message":"81","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":11},{"ruleId":"75","severity":1,"message":"96","line":26,"column":10,"nodeType":"77","messageId":"78","endLine":26,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":78,"column":6,"nodeType":"99","endLine":78,"endColumn":8,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":102,"column":13,"nodeType":"103","messageId":"104","endLine":102,"endColumn":19},{"ruleId":"75","severity":1,"message":"105","line":3,"column":10,"nodeType":"77","messageId":"78","endLine":3,"endColumn":14},{"ruleId":"75","severity":1,"message":"106","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":19},{"ruleId":"75","severity":1,"message":"81","line":14,"column":8,"nodeType":"77","messageId":"78","endLine":14,"endColumn":11},{"ruleId":"97","severity":1,"message":"107","line":64,"column":6,"nodeType":"99","endLine":64,"endColumn":8,"suggestions":"108"},{"ruleId":"101","severity":1,"message":"102","line":86,"column":13,"nodeType":"103","messageId":"104","endLine":86,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'Expense' is defined but never used.","'NewExpense' is defined but never used.","'EditExpense' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Stack' is defined but never used.","'NavLink' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Icon' is defined but never used.","'navigate' is assigned a value but never used.","'expense' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'Link' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["110"],{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [params.id]",{"range":"115","text":"116"},"Update the dependencies array to be: [categories]",{"range":"117","text":"118"},[2181,2183],"[params.id]",[1616,1618],"[categories]"]