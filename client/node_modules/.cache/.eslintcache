[{"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js":"1","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx":"2","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx":"3","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx":"4","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Register.jsx":"5","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Signup.jsx":"6","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Login.jsx":"7","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js":"8","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx":"9","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx":"10","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js":"11"},{"size":2300,"mtime":1657171245086,"results":"12","hashOfConfig":"13"},{"size":4384,"mtime":1656909852788,"results":"14","hashOfConfig":"13"},{"size":9957,"mtime":1657169669476,"results":"15","hashOfConfig":"13"},{"size":2549,"mtime":1657168600796,"results":"16","hashOfConfig":"13"},{"size":1139,"mtime":1657168529328,"results":"17","hashOfConfig":"13"},{"size":1836,"mtime":1656909852786,"results":"18","hashOfConfig":"13"},{"size":2003,"mtime":1657164465053,"results":"19","hashOfConfig":"13"},{"size":1058,"mtime":1656486742714,"results":"20","hashOfConfig":"13"},{"size":4590,"mtime":1656065896707,"results":"21","hashOfConfig":"13"},{"size":1370,"mtime":1657169564714,"results":"22","hashOfConfig":"13"},{"size":106,"mtime":1655367042032,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"1au5gvk",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js",["66","67","68","69"],[],"import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport Nav from './components/Nav/Nav';\nimport Expense from './components/Expense/Expense'\nimport NewExpense from './components/Expense/NewExpense'\nimport EditExpense from './components/Expense/EditExpense'\nimport HomePage from './components/HomePage';\nimport Register from './components/Auth/Register';\nimport { colors, createTheme, rgbToHex, ThemeProvider } from '@mui/material';\n\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      'Poppins',\n      'Gentium Book Plus',\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      main: colors.blue[600]\n    },\n    secondary:{\n      main: colors.purple[400],\n    }\n  }\n});\n\nfunction App() {\n  const [isUserLoggedIn, setIsUserLoggedIn] = useState(false);\n\n  const userLoggedStatus = () => {\n    if (localStorage.getItem('username') !== null) {\n      setIsUserLoggedIn(true)\n    } else {\n      setIsUserLoggedIn(false);\n    }\n  }\n  useEffect(() => {\n    userLoggedStatus();\n  }, [isUserLoggedIn])\n  return (\n    <>\n    <ThemeProvider theme={theme}>   \n    <Nav setIsUserLoggedIn={setIsUserLoggedIn} isUserLoggedIn={isUserLoggedIn} />\n  <Routes>\n    <Route path='/' element={<HomePage />}/>\n    <Route path='/auth/register' element={<Register setIsUserLoggedIn={setIsUserLoggedIn}/>}/>\n    <Route path='/expenses/:id' element={<EditExpense />} />\n    <Route path='/expenses' element={<Expense />} />\n    <Route path='/expenses/new' element={<NewExpense setIsUserLoggedIn={setIsUserLoggedIn} />} />\n  </Routes>\n  </ThemeProvider>  \n  </>\n  );\n}\n\nexport default App;\n\n\n//  <Routes>\n  \n    // {/* <div> */}\n      // {/* <Nav /> */}\n\n\n     \n\n        \n      {/* <Route path='/' element={<App />} /> */}\n      // <Route path='/navbar' element={<Nav />} />\n      // <Route path='/expenses' element={<Expense />} />\n      // <Route path='/expenses/:id' element={<EditExpense />} />\n      // <Route path='/expenses/new' element={<NewExpense />} />\n      \n\n\n\n\n\n    {/* </div> */}\n    //  </Routes> ","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx",["70","71","72","73","74","75","76"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Alert,\n  AlertTitle,\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst NewExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n\n  const navigate = useNavigate();\n\n  const submitHandler = async () => {\n    console.log(\"Userrrrr: \", localStorage.getItem(\"username\"));\n    const newProduct = {\n      item,\n      amount,\n      date,\n      category,\n      username: localStorage.getItem(\"username\"),\n    };\n\n    console.log(typeof date);\n\n    console.log(\"Submiting\");\n    await axios.post(\"/expenses/new\", newProduct);\n\n    setItem(\"\");\n    setAmount(0);\n    setDate(\"\");\n    setCategory(\"\");\n    setCategories(\"\");\n\n    navigate(\"/expenses\");\n  };\n\n  const getCategories = async () => {\n    const userExpenses = await axios.post(\n      \"/expenses/userExpenses\",\n      { username: localStorage.getItem(\"username\") },\n      {\n        headers: { authorization: localStorage.getItem(\"jwt\") },\n      }\n    );\n    // const expenses = await axios.get(\"/expenses\");\n    console.log(\"Useeeeeeee\", userExpenses);\n    const categories = [];\n    for (let i = 0; i < userExpenses.data.expenses.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (userExpenses.data.expenses[i].category) {\n        categories.push(userExpenses.data.expenses[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  useEffect(() => {\n    getCategories();\n    console.log(\"in useEffect\" + categories);\n  }, []);\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Enter A New Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            value={date}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          {/* <TextField\n            variant=\"outlined\"\n            label=\"Category\"\n            onChange={(e) => setCategory(e.target.value)}\n            fullWidth\n            value={category}\n          /> */}\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n            value={category}\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Add New Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default NewExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx",["77","78","79","80","81","82","83","84","85"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Link, NavLink, useNavigate } from \"react-router-dom\";\n\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Stack,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Paper,\n  TableBody,\n  IconButton,\n  Icon,\n  CircularProgress,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box, Container } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst Expense = () => {\n  const [expenses, setExpenses] = useState([{}]);\n  const [userExpenses, setUserExpenses] = useState([{}]);\n  const [accessToken, setAccessToken] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const navigate = useNavigate();\n\n  const deleteExpense = async (id) => {\n    console.log(\"Deletiiiing\");\n    await axios.delete(\"/expenses/\" + id);\n    // const filteredExpenses = expenses.filter((expense) => expense._id !== id);\n    const filteredExpenses = userExpenses.filter(\n      (expense) => expense._id !== id\n    );\n    // setExpenses(filteredExpenses);\n    setUserExpenses(filteredExpenses);\n    // window.location.reload();\n    // navigate(0);\n  };\n\n  const getAllExpenses = async () => {\n    console.log(\"I was ran\");\n    const expenses = await axios.get(\"/expenses\", {\n      headers: { authorization: localStorage.getItem(\"jwt\") },\n    });\n    setExpenses(expenses.data);\n    setIsLoading(false);\n\n    console.log(expenses.data);\n\n    // return expenses;\n  };\n\n  const getUserExpenses = async () => {\n    const userExpenses = await axios.post(\n      \"/expenses/userExpenses\",\n      { username: localStorage.getItem(\"username\") },\n      {\n        headers: { authorization: localStorage.getItem(\"jwt\") },\n      }\n    );\n    setUserExpenses(userExpenses.data.expenses);\n    setIsLoading(false);\n    console.log(\"UserExpenses: \", userExpenses);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    getAllExpenses();\n    setAccessToken(localStorage.getItem(\"jwt\"));\n    console.log(\"This is useEffect 1\");\n    getUserExpenses();\n    // console.log(expenses);\n  }, []);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      {accessToken ? (\n        <Container align=\"center\">\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"2rem\",\n              alignItems: \"center\",\n              //   border: \"2px solid blue\",\n            }}\n          >\n            <Typography\n              className=\"title\"\n              letterSpacing={3}\n              variant=\"h2\"\n              color=\"secondary.light\"\n            >\n              All Expenses\n            </Typography>\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              alignItems: \"center\",\n              // border: \"1px solid green\",\n              maxWidth: \"1100px\",\n              margin: \"1rem auto\",\n            }}\n          >\n            <Button\n              component={Link}\n              to=\"/expenses/new\"\n              variant=\"contained\"\n              sx={{ marginLeft: \"2rem\" }}\n            >\n              New Expense\n            </Button>\n          </Box>\n          <Box\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <TableContainer\n              component={Paper}\n              sx={{\n                maxWidth: \"1100px\",\n                marginTop: \"0.5rem\",\n                marginBottom: \"4rem\",\n              }}\n            >\n              <Table aria-label=\"Expenses\">\n                <TableHead>\n                  <TableRow sx={{ bgcolor: \"primary.main\", color: \"#fff\" }}>\n                    <TableCell sx={{ color: \"#fff\" }}>Item</TableCell>\n                    <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                      Amount\n                    </TableCell>\n                    <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                      Date\n                    </TableCell>\n                    <TableCell sx={{ color: \"#fff\" }}>Category</TableCell>\n                    <TableCell sx={{ color: \"#fff\" }}>Edit</TableCell>\n                    <TableCell sx={{ color: \"#fff\" }}>Delete</TableCell>\n                  </TableRow>\n                </TableHead>\n\n                <TableBody>\n                  {!isLoading &&\n                    userExpenses.map((expense, pos) => (\n                      <TableRow\n                        key={pos}\n                        sx={{\n                          \"&:last-child td, &last-child th\": { border: 0 },\n                        }}\n                      >\n                        <TableCell>\n                          <Typography\n                            color=\"primary\"\n                            variant=\"subtitle1\"\n                            sx={{ fontWeight: \"400\" }}\n                          >\n                            {expense.item}\n                          </Typography>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Typography color=\"secondary\" variant=\"subtitle2\">\n                            ${expense.amount}\n                          </Typography>\n                        </TableCell>\n                        <TableCell align=\"left\">\n                          <Typography color=\"primary\" variant=\"p\">\n                            {moment\n                              .utc(String(expense.date))\n                              .format(\"MM-DD-YYYY\")}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Typography color=\"secondary.light\" variant=\"p\">\n                            {expense.category}\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <IconButton\n                            component={Link}\n                            sx={{\n                              \"&:hover\": {\n                                color: \"green\",\n                              },\n                            }}\n                            to={`./${expense._id}`}\n                            // href={`expenses/${expense._id}`}\n                          >\n                            {/* <NavLink to={`expenses/${expense._id}`}> */}\n                            {/* <Link to={`./${expense._id}`}> */}\n                            <EditIcon />\n                            {/* </Link> */}\n                            {/* </NavLink> */}\n                          </IconButton>\n                        </TableCell>\n                        <TableCell>\n                          <IconButton\n                            sx={{\n                              \"&:hover\": { color: \"#ee0000\" },\n                            }}\n                            onClick={() => {\n                              deleteExpense(expense._id);\n                            }}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                </TableBody>\n              </Table>\n              {isLoading && (\n                <Box\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    margin: \"1rem 0\",\n                  }}\n                >\n                  <CircularProgress />\n                </Box>\n              )}\n            </TableContainer>\n            {userExpenses.length === 0 && (\n              <Typography\n                sx={{ letterSpacing: \"0.3rem\" }}\n                variant=\"h4\"\n                color=\"primary.dark\"\n              >\n                No Expenses to display\n              </Typography>\n            )}\n\n            {/* ======================== */}\n            {/* <Typography color=\"primary\" variant=\"h4\">\n                {expense.item}\n              </Typography>\n              <Typography color=\"secondary\" variant=\"h6\">\n                {expense.amount}\n              </Typography>\n              <Typography color=\"primary.light\" variant=\"h6\">\n                {expense.date}\n              </Typography>\n              <Typography color=\"secondary.light\" variant=\"h6\">\n                {expense.category}\n              </Typography> */}\n            {/* ======================= */}\n            {/* </Grid> */}\n            {/* </div> */}\n            {/* </Stack> */}\n            {/* {expense.item} {expense.amount} */}\n            {/* </div> */}\n            {/* </CardContent> */}\n            {/* </Stack> */}\n            {/* </Card> */}\n            {/* ))} */}\n          </Box>\n        </Container>\n      ) : (\n        <Container\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          align=\"center\"\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"15rem\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n\n              //   border: \"2px solid blue\",\n            }}\n          >\n            <Typography\n              sx={{ letterSpacing: \"0.2rem\" }}\n              variant=\"h2\"\n              color=\"primary.dark\"\n              marginTop=\"3rem\"\n              marginBottom=\"2rem\"\n            >\n              You must Login first\n            </Typography>\n            <Button\n              component={Link}\n              to=\"/auth/register\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              Login\n            </Button>\n          </Box>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Expense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx",["86","87","88","89","90"],[],"import { Link, useRoutes } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Stack,\n  Toolbar,\n  Tooltip,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport NavContainer from \"../../styles/Nav/Nav.styled\";\n\nconst Nav = (props) => {\n  // const [userIsSignedIn, setUserIsSignedIn] = useState(false);\n  const [username, setUsername] = useState(null);\n\n  const logHandler = () => {\n    // props.setUserIsSignedIn(false);\n    // localStorage.clear();\n    if (localStorage.getItem(\"username\") !== null) {\n      localStorage.clear();\n      props.setIsUserLoggedIn(false);\n    }\n    // if (localStorage.getItem(\"loggedIn\") === \"true\") {\n    //   setUserIsSignedIn(true);\n    // }\n  };\n\n  // const isUserSignedIn = () => {\n  //   if (localStorage.getItem(\"username\") !== null) {\n  //     props.setUserIsSignedIn(true);\n  //   } else {\n  //     props.setUserIsSignedIn(false);\n  //   }\n  // if (localStorage.getItem(\"loggedIn\") === \"true\") {\n  //   setUserIsSignedIn(true);\n  // }\n  // };\n\n  // useEffect(() => {\n  //   isUserSignedIn();\n\n  // }, []);\n  return (\n    <>\n      <NavContainer>\n        <Box minWidth=\"390px\">\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                Expense Tracker\n              </Typography>\n              <Button component={Link} to=\"/\" color=\"inherit\">\n                Home\n              </Button>\n              <Button component={Link} to=\"/expenses\" color=\"inherit\">\n                Expenses\n              </Button>\n              {/* <Link style={{ textDecoration: \"none\" }} to=\"/expenses\">\n                <Button sx={{ color: \"white\" }} color=\"inherit\">\n                  Expenses\n                </Button>\n              </Link> */}\n              <Button\n                component={Link}\n                to=\"/auth/register\"\n                color=\"inherit\"\n                onClick={logHandler}\n              >\n                {props.isUserLoggedIn && \"Logout\"}\n                {console.log(\"Servise kard: \", props.isUserLoggedIn)}\n                {!props.isUserLoggedIn && \"Login\"}\n              </Button>\n              <Tooltip title=\"Profile\">\n                <IconButton>\n                  <AccountCircleIcon sx={{ color: \"white\" }} />\n                </IconButton>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </NavContainer>\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Register.jsx",["91","92","93","94","95","96","97","98","99","100"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Navigate, NavLink, useNavigate } from \"react-router-dom\";\n\nimport { Button, Stack, Typography, TextField } from \"@mui/material\";\nimport { Box, Container } from \"@mui/system\";\nimport Signup from \"./Signup\";\nimport Login from \"./Login\";\n\nconst Register = (props) => {\n  const [haveAccount, setHaveAccount] = useState(true);\n  return (\n    <>\n      <Container>\n        <Stack\n          spacing={2}\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            maxWidth: \"600px\",\n            minWidth: \"330px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          {haveAccount ? (\n            <Login\n              setIsUserLoggedIn={props.setIsUserLoggedIn}\n              setHaveAccount={setHaveAccount}\n            />\n          ) : (\n            <Signup setHaveAccount={setHaveAccount} />\n          )}\n        </Stack>\n      </Container>\n    </>\n  );\n};\n\nexport default Register;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Signup.jsx",["101","102","103","104","105","106"],[],"import { Button, TextField, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { Link, Navigate, NavLink, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Signup = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [haveAccount, setHaveAccount] = useState(true);\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const submitHandler = async () => {\n    const newUser = {\n      username,\n      password,\n    };\n    const user = await axios.post(\"/auth/register\", newUser);\n\n    console.log(\"us us us user\", user);\n\n    setAccessToken(user.data.token);\n    localStorage.setItem(\"jwt\", user.data.token);\n    localStorage.setItem(\"username\", user.data.newUser.username);\n\n    setUsername(\"\");\n    setPassword(\"\");\n    navigate(\"/expenses\");\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h3\"\n        color=\"primary.light\"\n        sx={{ letterSpacing: \"4px\" }}\n      >\n        Sign Up\n      </Typography>\n      <TextField\n        variant=\"outlined\"\n        label=\"Username\"\n        fullWidth\n        onChange={(e) => setUsername(e.target.value)}\n        value={username}\n      />\n      <TextField\n        type=\"password\"\n        variant=\"outlined\"\n        label=\"Password\"\n        fullWidth\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Typography\n        variant=\"p\"\n        color=\"primary.light\"\n        onClick={() => props.setHaveAccount(true)}\n        sx={{ cursor: \"pointer\", \"&:hover\": { color: \"blue\" } }}\n      >\n        Already have an account? Login here\n      </Typography>\n      <Button variant=\"outlined\" onClick={submitHandler}>\n        Sign Up\n      </Button>\n    </>\n  );\n};\n\nexport default Signup;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Auth/Login.jsx",["107","108","109","110"],[],"import { Button, TextField, Typography } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { Link, Navigate, NavLink, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const loginHandler = async () => {\n    const enteredUser = {\n      username,\n      password,\n    };\n\n    // const user = await axios.post(\"/user/getUser\", enteredUser);\n    const user = await axios.post(\"/auth/login\", enteredUser);\n    console.log(\"User info: \", user);\n    console.log(\"User data: \", user.data);\n    setAccessToken(user.data.token);\n    // sessionStorage.setItem(\"jwt\", user.data.token);\n    localStorage.setItem(\"jwt\", user.data.token);\n    localStorage.setItem(\"username\", user.data.user.username);\n    localStorage.setItem(\"loggedIn\", \"true\");\n\n    props.setIsUserLoggedIn(true);\n\n    if (user) {\n      navigate(\"/expenses\");\n    }\n  };\n\n  return (\n    <>\n      <Typography\n        variant=\"h3\"\n        color=\"primary.light\"\n        sx={{ letterSpacing: \"4px\" }}\n      >\n        Login\n      </Typography>\n      <TextField\n        variant=\"outlined\"\n        label=\"Username\"\n        fullWidth\n        onChange={(e) => setUsername(e.target.value)}\n        value={username}\n      />\n      <TextField\n        type=\"password\"\n        variant=\"outlined\"\n        label=\"Password\"\n        fullWidth\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <Typography\n        variant=\"p\"\n        color=\"primary.light\"\n        onClick={() => props.setHaveAccount(false)}\n        sx={{ cursor: \"pointer\", \"&:hover\": { color: \"blue\" } }}\n      >\n        Don't have an account? Register Here\n      </Typography>\n      <Button variant=\"outlined\" onClick={loginHandler}>\n        Login\n      </Button>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js",["111","112","113","114","115","116","117"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Routes, Route, BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './App.css'\nimport Nav from './components/Nav/Nav';\nimport Expense from './components/Expense/Expense'\nimport NewExpense from './components/Expense/NewExpense'\nimport EditExpense from './components/Expense/EditExpense'\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n    <BrowserRouter>\n      <App className='App' />\n    </BrowserRouter>\n  </React.StrictMode>,\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <Router>\n//     <Routes>\n//       <Route path='/' element={<App />} />\n//       <Route path='/navbar' element={<Nav />} />\n//       <Route path='/expenses' element={<Expense />} />\n//       <Route path='/expenses/:id' element={<EditExpense />} />\n//       <Route path='/expenses/new' element={<NewExpense />} />\n\n//     </Routes>\n\n//   </Router>\n  \n// );\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx",["118","119","120","121"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Nav from \"../Nav/Nav\";\n\nconst EditExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n  const [slicedDate, setSlicedDate] = useState(\"\");\n\n  const params = useParams();\n  const navigate = useNavigate();\n  console.log(params);\n\n  const [expense, setExpense] = useState({});\n\n  const getOneExpense = async (id) => {\n    const oneExpense = await axios.get(\"/expenses/\" + id);\n    setExpense(oneExpense.data);\n    setItem(oneExpense.data.item);\n    setAmount(oneExpense.data.amount);\n    setDate(oneExpense.data.date);\n    setCategory(oneExpense.data.category);\n    setSlicedDate(oneExpense.data.date.slice(0, 10));\n    console.log(\"One Expense: \", oneExpense.data);\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  const submitHandler = () => {\n    const editedProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(\"Edited Product: \" + editedProduct);\n\n    console.log(\"in submitting\" + params.id);\n    console.log(\"Editting\");\n    axios.put(`/expenses/${params.id}/edit`, editedProduct);\n\n    // setItem(\"\");\n    // setAmount(0);\n    // setDate(\"\");\n    // setCategory(\"\");\n    // setCategories(\"\");\n    navigate(\"/expenses\");\n  };\n\n  useEffect(() => {\n    getOneExpense(params.id);\n    getCategories();\n  }, []);\n  console.log(\"Daaaaaatee: \" + slicedDate);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Edit Your Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            // defaultValue={slicedDate}\n            // defaultValue={date.slice(0, 10)}\n            value={date.slice(0, 10)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            value={String(category)}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Edit Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default EditExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx",[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js",[],[],{"ruleId":"122","severity":1,"message":"123","line":1,"column":27,"nodeType":"124","messageId":"125","endLine":1,"endColumn":33},{"ruleId":"122","severity":1,"message":"126","line":9,"column":31,"nodeType":"124","messageId":"125","endLine":9,"endColumn":39},{"ruleId":"127","severity":1,"message":"128","line":80,"column":7,"nodeType":"129","messageId":"130","endLine":80,"endColumn":51},{"ruleId":"127","severity":1,"message":"128","line":91,"column":5,"nodeType":"129","messageId":"130","endLine":91,"endColumn":19},{"ruleId":"122","severity":1,"message":"131","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"132","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":19},{"ruleId":"122","severity":1,"message":"133","line":6,"column":3,"nodeType":"124","messageId":"125","endLine":6,"endColumn":8},{"ruleId":"122","severity":1,"message":"134","line":7,"column":3,"nodeType":"124","messageId":"125","endLine":7,"endColumn":13},{"ruleId":"122","severity":1,"message":"135","line":16,"column":8,"nodeType":"124","messageId":"125","endLine":16,"endColumn":11},{"ruleId":"136","severity":1,"message":"137","line":77,"column":6,"nodeType":"138","endLine":77,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":99,"column":13,"nodeType":"142","messageId":"143","endLine":99,"endColumn":19},{"ruleId":"122","severity":1,"message":"144","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":23},{"ruleId":"122","severity":1,"message":"145","line":8,"column":3,"nodeType":"124","messageId":"125","endLine":8,"endColumn":7},{"ruleId":"122","severity":1,"message":"146","line":9,"column":3,"nodeType":"124","messageId":"125","endLine":9,"endColumn":14},{"ruleId":"122","severity":1,"message":"147","line":10,"column":3,"nodeType":"124","messageId":"125","endLine":10,"endColumn":7},{"ruleId":"122","severity":1,"message":"148","line":11,"column":3,"nodeType":"124","messageId":"125","endLine":11,"endColumn":8},{"ruleId":"122","severity":1,"message":"149","line":21,"column":3,"nodeType":"124","messageId":"125","endLine":21,"endColumn":7},{"ruleId":"122","severity":1,"message":"135","line":28,"column":8,"nodeType":"124","messageId":"125","endLine":28,"endColumn":11},{"ruleId":"122","severity":1,"message":"150","line":31,"column":10,"nodeType":"124","messageId":"125","endLine":31,"endColumn":18},{"ruleId":"122","severity":1,"message":"151","line":36,"column":9,"nodeType":"124","messageId":"125","endLine":36,"endColumn":17},{"ruleId":"122","severity":1,"message":"152","line":1,"column":16,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"153","line":2,"column":20,"nodeType":"124","messageId":"125","endLine":2,"endColumn":29},{"ruleId":"122","severity":1,"message":"148","line":7,"column":3,"nodeType":"124","messageId":"125","endLine":7,"endColumn":8},{"ruleId":"122","severity":1,"message":"154","line":18,"column":10,"nodeType":"124","messageId":"125","endLine":18,"endColumn":18},{"ruleId":"122","severity":1,"message":"155","line":18,"column":20,"nodeType":"124","messageId":"125","endLine":18,"endColumn":31},{"ruleId":"122","severity":1,"message":"153","line":2,"column":20,"nodeType":"124","messageId":"125","endLine":2,"endColumn":29},{"ruleId":"122","severity":1,"message":"156","line":3,"column":8,"nodeType":"124","messageId":"125","endLine":3,"endColumn":13},{"ruleId":"122","severity":1,"message":"131","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":14},{"ruleId":"122","severity":1,"message":"157","line":4,"column":16,"nodeType":"124","messageId":"125","endLine":4,"endColumn":24},{"ruleId":"122","severity":1,"message":"144","line":4,"column":26,"nodeType":"124","messageId":"125","endLine":4,"endColumn":33},{"ruleId":"122","severity":1,"message":"158","line":4,"column":35,"nodeType":"124","messageId":"125","endLine":4,"endColumn":46},{"ruleId":"122","severity":1,"message":"159","line":6,"column":10,"nodeType":"124","messageId":"125","endLine":6,"endColumn":16},{"ruleId":"122","severity":1,"message":"160","line":6,"column":25,"nodeType":"124","messageId":"125","endLine":6,"endColumn":35},{"ruleId":"122","severity":1,"message":"161","line":6,"column":37,"nodeType":"124","messageId":"125","endLine":6,"endColumn":46},{"ruleId":"122","severity":1,"message":"162","line":7,"column":10,"nodeType":"124","messageId":"125","endLine":7,"endColumn":13},{"ruleId":"122","severity":1,"message":"131","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"157","line":3,"column":16,"nodeType":"124","messageId":"125","endLine":3,"endColumn":24},{"ruleId":"122","severity":1,"message":"144","line":3,"column":26,"nodeType":"124","messageId":"125","endLine":3,"endColumn":33},{"ruleId":"122","severity":1,"message":"163","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":21},{"ruleId":"122","severity":1,"message":"164","line":9,"column":23,"nodeType":"124","messageId":"125","endLine":9,"endColumn":37},{"ruleId":"122","severity":1,"message":"165","line":10,"column":10,"nodeType":"124","messageId":"125","endLine":10,"endColumn":21},{"ruleId":"122","severity":1,"message":"131","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":14},{"ruleId":"122","severity":1,"message":"157","line":3,"column":16,"nodeType":"124","messageId":"125","endLine":3,"endColumn":24},{"ruleId":"122","severity":1,"message":"144","line":3,"column":26,"nodeType":"124","messageId":"125","endLine":3,"endColumn":33},{"ruleId":"122","severity":1,"message":"165","line":9,"column":10,"nodeType":"124","messageId":"125","endLine":9,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":3,"column":27,"nodeType":"124","messageId":"125","endLine":3,"endColumn":33},{"ruleId":"122","severity":1,"message":"166","line":3,"column":35,"nodeType":"124","messageId":"125","endLine":3,"endColumn":41},{"ruleId":"122","severity":1,"message":"167","line":3,"column":43,"nodeType":"124","messageId":"125","endLine":3,"endColumn":48},{"ruleId":"122","severity":1,"message":"135","line":6,"column":8,"nodeType":"124","messageId":"125","endLine":6,"endColumn":11},{"ruleId":"122","severity":1,"message":"168","line":7,"column":8,"nodeType":"124","messageId":"125","endLine":7,"endColumn":15},{"ruleId":"122","severity":1,"message":"169","line":8,"column":8,"nodeType":"124","messageId":"125","endLine":8,"endColumn":18},{"ruleId":"122","severity":1,"message":"170","line":9,"column":8,"nodeType":"124","messageId":"125","endLine":9,"endColumn":19},{"ruleId":"122","severity":1,"message":"135","line":12,"column":8,"nodeType":"124","messageId":"125","endLine":12,"endColumn":11},{"ruleId":"122","severity":1,"message":"171","line":26,"column":10,"nodeType":"124","messageId":"125","endLine":26,"endColumn":17},{"ruleId":"136","severity":1,"message":"172","line":78,"column":6,"nodeType":"138","endLine":78,"endColumn":8,"suggestions":"173"},{"ruleId":"140","severity":1,"message":"141","line":102,"column":13,"nodeType":"142","messageId":"143","endLine":102,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'rgbToHex' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Link' is defined but never used.","'useParams' is defined but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'Nav' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.","ArrayExpression",["174"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'NavLink' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Stack' is defined but never used.","'Icon' is defined but never used.","'expenses' is assigned a value but never used.","'navigate' is assigned a value but never used.","'useRoutes' is defined but never used.","'useEffect' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'axios' is defined but never used.","'Navigate' is defined but never used.","'useNavigate' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'haveAccount' is assigned a value but never used.","'setHaveAccount' is assigned a value but never used.","'accessToken' is assigned a value but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'Expense' is defined but never used.","'NewExpense' is defined but never used.","'EditExpense' is defined but never used.","'expense' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["175"],{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [categories]",{"range":"180","text":"181"},"Update the dependencies array to be: [params.id]",{"range":"182","text":"183"},[2064,2066],"[categories]",[2181,2183],"[params.id]"]