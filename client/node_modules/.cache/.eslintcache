[{"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js":"1","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js":"2","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx":"3","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx":"4","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx":"5","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx":"6","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js":"7","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx":"8"},{"size":1023,"mtime":1656065825247,"results":"9","hashOfConfig":"10"},{"size":1219,"mtime":1656065808401,"results":"11","hashOfConfig":"10"},{"size":8089,"mtime":1656065923923,"results":"12","hashOfConfig":"10"},{"size":1398,"mtime":1655890107760,"results":"13","hashOfConfig":"10"},{"size":4590,"mtime":1656065896707,"results":"14","hashOfConfig":"10"},{"size":3802,"mtime":1656066021395,"results":"15","hashOfConfig":"10"},{"size":106,"mtime":1655367042032,"results":"16","hashOfConfig":"10"},{"size":1334,"mtime":1656065347936,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15o8080",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js",["47","48","49","50","51","52","53"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js",["54","55","56","57","58","59"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx",["60","61","62","63","64","65","66","67"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Stack,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Paper,\n  TableBody,\n  IconButton,\n  Icon,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst Expense = () => {\n  const [expenses, setExpenses] = useState([{}]);\n\n  const deleteExpense = async (id) => {\n    console.log(\"Deletiiiing\");\n    await axios.delete(\"/expenses/\" + id);\n    window.location.reload();\n  };\n\n  const getAllExpenses = async () => {\n    console.log(\"I was ran\");\n    const expenses = await axios.get(\"http://localhost:3001/expenses\");\n    setExpenses(expenses.data);\n    console.log(expenses);\n    console.log(expenses.data);\n\n    // return expenses;\n  };\n\n  useEffect(() => {\n    getAllExpenses();\n    console.log(\"This is useEffect\");\n    // console.log(expenses);\n  }, []);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"2rem\",\n          alignItems: \"center\",\n          //   border: \"2px solid blue\",\n        }}\n      >\n        <Typography letterSpacing={3} variant=\"h2\" color=\"secondary.light\">\n          All Expenses in a Glance\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          // border: \"1px solid red\",\n          width: \"1100px\",\n          margin: \"1rem auto\",\n        }}\n      >\n        <Button\n          component={Link}\n          to=\"/expenses/new\"\n          variant=\"contained\"\n          sx={{ marginLeft: \"2rem\" }}\n        >\n          New Expense\n        </Button>\n      </Box>\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {/* Commenting Staaart */}\n        {/* {expenses.map((expense, pos) => (\n          <Card\n            sx={{\n              width: 875,\n              margin: \"1rem\",\n              boxShadow: \"0px 0px 5px rgba(0,0,0,0.3)\",\n            }}\n            key={pos}\n          >\n            {console.log(expense)}\n            <Stack spacing={6}>\n              <CardContent\n                sx={{\n                  margin: \"1rem\",\n                  textAlign: \"center\",\n                }}\n              >\n    \n                <Grid\n                  container\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Grid item xs={12} sm={6} md={4}>\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {expense.item}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={2}>\n                    <Typography color=\"secondary\" variant=\"h6\">\n                      {expense.amount}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Typography color=\"primary.light\" variant=\"h6\">\n                      {moment.utc(String(expense.date)).format(\"DD-MM-YYYY\")}\n                      {console.log(\n                        moment.utc(String(expense.date)).format(\"DD MM YYYY\")\n                      )}\n                      {console.log(expense.date)}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Typography color=\"secondary.light\" variant=\"h6\">\n                      {expense.category}\n                    </Typography>\n                  </Grid> */}\n\n        {/* Commenting Eeeeend */}\n\n        <TableContainer\n          component={Paper}\n          sx={{ maxWidth: \"1100px\", marginTop: \"0.5rem\", marginBottom: \"4rem\" }}\n        >\n          <Table aria-label=\"Expenses\">\n            <TableHead>\n              <TableRow sx={{ bgcolor: \"primary.main\", color: \"#fff\" }}>\n                <TableCell sx={{ color: \"#fff\" }}>Item</TableCell>\n                <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                  Amount\n                </TableCell>\n                <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                  Date\n                </TableCell>\n                <TableCell sx={{ color: \"#fff\" }}>Category</TableCell>\n                <TableCell sx={{ color: \"#fff\" }}>Edit</TableCell>\n                <TableCell sx={{ color: \"#fff\" }}>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {expenses.map((expense, pos) => (\n                <TableRow\n                  key={pos}\n                  sx={{\n                    \"&:last-child td, &last-child th\": { border: 0 },\n                  }}\n                >\n                  <TableCell>\n                    <Typography\n                      color=\"primary\"\n                      variant=\"subtitle1\"\n                      sx={{ fontWeight: \"400\" }}\n                    >\n                      {expense.item}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography color=\"secondary\" variant=\"subtitle2\">\n                      ${expense.amount}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography color=\"primary\" variant=\"p\">\n                      {moment.utc(String(expense.date)).format(\"MM-DD-YYYY\")}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"secondary.light\" variant=\"p\">\n                      {expense.category}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      // component={Link}\n                      sx={{\n                        \"&:hover\": {\n                          color: \"green\",\n                        },\n                      }}\n                      href={`expenses/${expense._id}`}\n                    >\n                      {/* <NavLink to={`expenses/${expense._id}`}> */}\n                      <EditIcon />\n                      {/* </NavLink> */}\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      sx={{\n                        \"&:hover\": { color: \"#ee0000\" },\n                      }}\n                      onClick={() => {\n                        deleteExpense(expense._id);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* ======================== */}\n        {/* <Typography color=\"primary\" variant=\"h4\">\n                {expense.item}\n              </Typography>\n              <Typography color=\"secondary\" variant=\"h6\">\n                {expense.amount}\n              </Typography>\n              <Typography color=\"primary.light\" variant=\"h6\">\n                {expense.date}\n              </Typography>\n              <Typography color=\"secondary.light\" variant=\"h6\">\n                {expense.category}\n              </Typography> */}\n        {/* ======================= */}\n        {/* </Grid> */}\n        {/* </div> */}\n        {/* </Stack> */}\n        {/* {expense.item} {expense.amount} */}\n        {/* </div> */}\n        {/* </CardContent> */}\n        {/* </Stack> */}\n        {/* </Card> */}\n        {/* ))} */}\n      </Box>\n    </>\n  );\n};\n\nexport default Expense;\n",[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx",["68"],[],"import { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Stack,\n  Toolbar,\n  Tooltip,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport NavContainer from \"../../styles/Nav/Nav.styled\";\n\nconst Nav = () => {\n  return (\n    <>\n      <NavContainer>\n        <Box>\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                Expense Tracker\n              </Typography>\n              <Button component={Link} to=\"/\" color=\"inherit\">\n                Home\n              </Button>\n              <Button component={Link} to=\"/expenses\" color=\"inherit\">\n                Expenses\n              </Button>\n              {/* <Link style={{ textDecoration: \"none\" }} to=\"/expenses\">\n                <Button sx={{ color: \"white\" }} color=\"inherit\">\n                  Expenses\n                </Button>\n              </Link> */}\n              <Button component={Link} to=\"#\" color=\"inherit\">\n                Login\n              </Button>\n              <Tooltip title=\"Profile\">\n                <IconButton>\n                  <AccountCircleIcon sx={{ color: \"white\" }} />\n                </IconButton>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </NavContainer>\n    </>\n  );\n};\n\nexport default Nav;\n",[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx",["69","70","71","72"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Nav from \"../Nav/Nav\";\n\nconst EditExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n  const [slicedDate, setSlicedDate] = useState(\"\");\n\n  const params = useParams();\n  const navigate = useNavigate();\n  console.log(params);\n\n  const [expense, setExpense] = useState({});\n\n  const getOneExpense = async (id) => {\n    const oneExpense = await axios.get(\"/expenses/\" + id);\n    setExpense(oneExpense.data);\n    setItem(oneExpense.data.item);\n    setAmount(oneExpense.data.amount);\n    setDate(oneExpense.data.date);\n    setCategory(oneExpense.data.category);\n    setSlicedDate(oneExpense.data.date.slice(0, 10));\n    console.log(\"One Expense: \", oneExpense.data);\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  const submitHandler = () => {\n    const editedProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(\"Edited Product: \" + editedProduct);\n\n    console.log(\"in submitting\" + params.id);\n    console.log(\"Editting\");\n    axios.put(`/expenses/${params.id}/edit`, editedProduct);\n\n    // setItem(\"\");\n    // setAmount(0);\n    // setDate(\"\");\n    // setCategory(\"\");\n    // setCategories(\"\");\n    navigate(\"/expenses\");\n  };\n\n  useEffect(() => {\n    getOneExpense(params.id);\n    getCategories();\n  }, []);\n  console.log(\"Daaaaaatee: \" + slicedDate);\n\n  return (\n    <>\n      {/* <Nav /> */}\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Edit Your Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            // defaultValue={slicedDate}\n            // defaultValue={date.slice(0, 10)}\n            value={date.slice(0, 10)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            value={String(category)}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Edit Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default EditExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx",["73","74","75","76"],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js",[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/HomePage.jsx",[],[],{"ruleId":"77","severity":1,"message":"78","line":3,"column":27,"nodeType":"79","messageId":"80","endLine":3,"endColumn":33},{"ruleId":"77","severity":1,"message":"81","line":3,"column":35,"nodeType":"79","messageId":"80","endLine":3,"endColumn":41},{"ruleId":"77","severity":1,"message":"82","line":3,"column":43,"nodeType":"79","messageId":"80","endLine":3,"endColumn":48},{"ruleId":"77","severity":1,"message":"83","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":11},{"ruleId":"77","severity":1,"message":"84","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":15},{"ruleId":"77","severity":1,"message":"85","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":18},{"ruleId":"77","severity":1,"message":"86","line":8,"column":8,"nodeType":"79","messageId":"80","endLine":8,"endColumn":19},{"ruleId":"77","severity":1,"message":"87","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":20},{"ruleId":"77","severity":1,"message":"88","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":13},{"ruleId":"77","severity":1,"message":"89","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"78","line":5,"column":27,"nodeType":"79","messageId":"80","endLine":5,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":38,"column":7,"nodeType":"92","messageId":"93","endLine":38,"endColumn":51},{"ruleId":"90","severity":1,"message":"91","line":49,"column":5,"nodeType":"92","messageId":"93","endLine":49,"endColumn":19},{"ruleId":"77","severity":1,"message":"94","line":4,"column":16,"nodeType":"79","messageId":"80","endLine":4,"endColumn":23},{"ruleId":"77","severity":1,"message":"95","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":21},{"ruleId":"77","severity":1,"message":"96","line":8,"column":3,"nodeType":"79","messageId":"80","endLine":8,"endColumn":7},{"ruleId":"77","severity":1,"message":"97","line":9,"column":3,"nodeType":"79","messageId":"80","endLine":9,"endColumn":14},{"ruleId":"77","severity":1,"message":"98","line":10,"column":3,"nodeType":"79","messageId":"80","endLine":10,"endColumn":7},{"ruleId":"77","severity":1,"message":"99","line":11,"column":3,"nodeType":"79","messageId":"80","endLine":11,"endColumn":8},{"ruleId":"77","severity":1,"message":"100","line":21,"column":3,"nodeType":"79","messageId":"80","endLine":21,"endColumn":7},{"ruleId":"77","severity":1,"message":"83","line":27,"column":8,"nodeType":"79","messageId":"80","endLine":27,"endColumn":11},{"ruleId":"77","severity":1,"message":"99","line":6,"column":3,"nodeType":"79","messageId":"80","endLine":6,"endColumn":8},{"ruleId":"77","severity":1,"message":"83","line":12,"column":8,"nodeType":"79","messageId":"80","endLine":12,"endColumn":11},{"ruleId":"77","severity":1,"message":"101","line":26,"column":10,"nodeType":"79","messageId":"80","endLine":26,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":78,"column":6,"nodeType":"104","endLine":78,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":102,"column":13,"nodeType":"108","messageId":"109","endLine":102,"endColumn":19},{"ruleId":"77","severity":1,"message":"89","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"83","line":13,"column":8,"nodeType":"79","messageId":"80","endLine":13,"endColumn":11},{"ruleId":"102","severity":1,"message":"110","line":59,"column":6,"nodeType":"104","endLine":59,"endColumn":8,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"107","line":81,"column":13,"nodeType":"108","messageId":"109","endLine":81,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'Expense' is defined but never used.","'NewExpense' is defined but never used.","'EditExpense' is defined but never used.","'Typography' is defined but never used.","'Box' is defined but never used.","'Link' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'NavLink' is defined but never used.","'useNavigate' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Stack' is defined but never used.","'Icon' is defined but never used.","'expense' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["112"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["113"],{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [params.id]",{"range":"118","text":"119"},"Update the dependencies array to be: [categories]",{"range":"120","text":"121"},[2181,2183],"[params.id]",[1482,1484],"[categories]"]