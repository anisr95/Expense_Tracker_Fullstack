[{"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js":"1","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js":"2","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx":"3","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx":"4","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx":"5","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx":"6","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js":"7"},{"size":793,"mtime":1655893291833,"results":"8","hashOfConfig":"9"},{"size":1298,"mtime":1655715384422,"results":"10","hashOfConfig":"9"},{"size":7931,"mtime":1655967648869,"results":"11","hashOfConfig":"9"},{"size":1398,"mtime":1655890107760,"results":"12","hashOfConfig":"9"},{"size":4582,"mtime":1655890763419,"results":"13","hashOfConfig":"9"},{"size":3791,"mtime":1655889929907,"results":"14","hashOfConfig":"9"},{"size":106,"mtime":1655367042032,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"15o8080",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"19"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"19"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/index.js",[],[],[],"/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/App.js",["43"],[],"import { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Link } from 'react-router-dom';\nimport './App.css'\n\nimport Nav from './components/Nav/Nav';\n\n\n\nfunction App() {\n  return (\n    // <Routes>\n    <div>\n      <Nav />\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: 'column',\n          justifyContent: \"center\",\n          marginLeft: '3rem',\n          marginTop: '2rem'\n        }}>\n        <Typography variant='h2' color='primary' gutterBottom>Expense Tracker Project</Typography>\n        <Typography variant='h6' color='secondary'>This is a CRUD (Create, Read, Update, Delete) app, built using MERN stack (MondoDB, Express, React, and Node)</Typography>\n        <Typography gutterBottom variant='h6' color='secondary'>Go to Expenses tab to start</Typography>\n        <Typography variant='p' color='secondary.light'>This project is still not finished, please come back after a few days to see the latest version</Typography>\n        <Typography variant='p' color='secondary.light'>Future updates: Expense Tracker Graph, Login/Logout and user Authentication, Ability to create profile, Becoming more responsive for Mobile and Tablet use, and many more</Typography>\n\n        </Box>\n    </div>\n    // </Routes>\n  );\n}\n\nexport default App;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/Expense.jsx",["44","45","46","47","48","49"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  Stack,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  Paper,\n  TableBody,\n  IconButton,\n  Icon,\n} from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst Expense = () => {\n  const [expenses, setExpenses] = useState([{}]);\n\n  const deleteExpense = async (id) => {\n    console.log(\"Deletiiiing\");\n    await axios.delete(\"/expenses/\" + id);\n    window.location.reload();\n  };\n\n  const getAllExpenses = async () => {\n    console.log(\"I was ran\");\n    const expenses = await axios.get(\"/expenses\");\n    setExpenses(expenses.data);\n    console.log(expenses);\n    console.log(expenses.data);\n\n    // return expenses;\n  };\n\n  useEffect(() => {\n    getAllExpenses();\n    console.log(\"This is useEffect\");\n    // console.log(expenses);\n  }, []);\n\n  return (\n    <>\n      <Nav />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"2rem\",\n          alignItems: \"center\",\n          //   border: \"2px solid blue\",\n        }}\n      >\n        <Typography letterSpacing={3} variant=\"h2\" color=\"secondary.light\">\n          All Expenses in a Glance\n        </Typography>\n      </Box>\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          // border: \"1px solid red\",\n          width: \"1100px\",\n          margin: \"1rem auto\",\n        }}\n      >\n        <Button\n          component={Link}\n          to=\"/expenses/new\"\n          variant=\"contained\"\n          sx={{ marginLeft: \"2rem\" }}\n        >\n          New Expense\n        </Button>\n      </Box>\n\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        {/* Commenting Staaart */}\n        {/* {expenses.map((expense, pos) => (\n          <Card\n            sx={{\n              width: 875,\n              margin: \"1rem\",\n              boxShadow: \"0px 0px 5px rgba(0,0,0,0.3)\",\n            }}\n            key={pos}\n          >\n            {console.log(expense)}\n            <Stack spacing={6}>\n              <CardContent\n                sx={{\n                  margin: \"1rem\",\n                  textAlign: \"center\",\n                }}\n              >\n    \n                <Grid\n                  container\n                  sx={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Grid item xs={12} sm={6} md={4}>\n                    <Typography color=\"primary\" variant=\"h5\">\n                      {expense.item}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={2}>\n                    <Typography color=\"secondary\" variant=\"h6\">\n                      {expense.amount}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Typography color=\"primary.light\" variant=\"h6\">\n                      {moment.utc(String(expense.date)).format(\"DD-MM-YYYY\")}\n                      {console.log(\n                        moment.utc(String(expense.date)).format(\"DD MM YYYY\")\n                      )}\n                      {console.log(expense.date)}\n                    </Typography>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6} md={3}>\n                    <Typography color=\"secondary.light\" variant=\"h6\">\n                      {expense.category}\n                    </Typography>\n                  </Grid> */}\n\n        {/* Commenting Eeeeend */}\n\n        <TableContainer\n          component={Paper}\n          sx={{ maxWidth: \"1100px\", marginTop: \"0.5rem\", marginBottom: \"4rem\" }}\n        >\n          <Table aria-label=\"Expenses\">\n            <TableHead>\n              <TableRow sx={{ bgcolor: \"primary.main\", color: \"#fff\" }}>\n                <TableCell sx={{ color: \"#fff\" }}>Item</TableCell>\n                <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                  Amount\n                </TableCell>\n                <TableCell sx={{ color: \"#fff\" }} align=\"left\">\n                  Date\n                </TableCell>\n                <TableCell sx={{ color: \"#fff\" }}>Category</TableCell>\n                <TableCell sx={{ color: \"#fff\" }}>Edit</TableCell>\n                <TableCell sx={{ color: \"#fff\" }}>Delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {expenses.map((expense, pos) => (\n                <TableRow\n                  key={pos}\n                  sx={{\n                    \"&:last-child td, &last-child th\": { border: 0 },\n                  }}\n                >\n                  <TableCell>\n                    <Typography\n                      color=\"primary\"\n                      variant=\"subtitle1\"\n                      sx={{ fontWeight: \"400\" }}\n                    >\n                      {expense.item}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography color=\"secondary\" variant=\"subtitle2\">\n                      ${expense.amount}\n                    </Typography>\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    <Typography color=\"primary\" variant=\"p\">\n                      {moment.utc(String(expense.date)).format(\"MM-DD-YYYY\")}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Typography color=\"secondary.light\" variant=\"p\">\n                      {expense.category}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      // component={Link}\n                      sx={{\n                        \"&:hover\": {\n                          color: \"green\",\n                        },\n                      }}\n                      href={`/${expense._id}`}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                  </TableCell>\n                  <TableCell>\n                    <IconButton\n                      sx={{\n                        \"&:hover\": { color: \"#ee0000\" },\n                      }}\n                      onClick={() => {\n                        deleteExpense(expense._id);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        {/* ======================== */}\n        {/* <Typography color=\"primary\" variant=\"h4\">\n                {expense.item}\n              </Typography>\n              <Typography color=\"secondary\" variant=\"h6\">\n                {expense.amount}\n              </Typography>\n              <Typography color=\"primary.light\" variant=\"h6\">\n                {expense.date}\n              </Typography>\n              <Typography color=\"secondary.light\" variant=\"h6\">\n                {expense.category}\n              </Typography> */}\n        {/* ======================= */}\n        {/* </Grid> */}\n        {/* </div> */}\n        {/* </Stack> */}\n        {/* {expense.item} {expense.amount} */}\n        {/* </div> */}\n        {/* </CardContent> */}\n        {/* </Stack> */}\n        {/* </Card> */}\n        {/* ))} */}\n      </Box>\n    </>\n  );\n};\n\nexport default Expense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Nav/Nav.jsx",["50"],[],"import { Link } from \"react-router-dom\";\nimport {\n  AppBar,\n  Button,\n  IconButton,\n  Stack,\n  Toolbar,\n  Tooltip,\n  Typography,\n  Box,\n} from \"@mui/material\";\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\nimport NavContainer from \"../../styles/Nav/Nav.styled\";\n\nconst Nav = () => {\n  return (\n    <>\n      <NavContainer>\n        <Box>\n          <AppBar position=\"sticky\">\n            <Toolbar>\n              <Typography variant=\"h5\" sx={{ flexGrow: 1 }}>\n                Expense Tracker\n              </Typography>\n              <Button component={Link} to=\"/\" color=\"inherit\">\n                Home\n              </Button>\n              <Button component={Link} to=\"/expenses\" color=\"inherit\">\n                Expenses\n              </Button>\n              {/* <Link style={{ textDecoration: \"none\" }} to=\"/expenses\">\n                <Button sx={{ color: \"white\" }} color=\"inherit\">\n                  Expenses\n                </Button>\n              </Link> */}\n              <Button component={Link} to=\"#\" color=\"inherit\">\n                Login\n              </Button>\n              <Tooltip title=\"Profile\">\n                <IconButton>\n                  <AccountCircleIcon sx={{ color: \"white\" }} />\n                </IconButton>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n        </Box>\n      </NavContainer>\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/EditExpense.jsx",["51","52","53"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Nav from \"../Nav/Nav\";\n\nconst EditExpense = (props) => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n  const [slicedDate, setSlicedDate] = useState(\"\");\n\n  const params = useParams();\n  const navigate = useNavigate();\n  console.log(params);\n\n  const [expense, setExpense] = useState({});\n\n  const getOneExpense = async (id) => {\n    const oneExpense = await axios.get(\"/expenses/\" + id);\n    setExpense(oneExpense.data);\n    setItem(oneExpense.data.item);\n    setAmount(oneExpense.data.amount);\n    setDate(oneExpense.data.date);\n    setCategory(oneExpense.data.category);\n    setSlicedDate(oneExpense.data.date.slice(0, 10));\n    console.log(\"One Expense: \", oneExpense.data);\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  const submitHandler = () => {\n    const editedProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(\"Edited Product: \" + editedProduct);\n\n    console.log(\"in submitting\" + params.id);\n    console.log(\"Editting\");\n    axios.put(`/expenses/${params.id}/edit`, editedProduct);\n\n    // setItem(\"\");\n    // setAmount(0);\n    // setDate(\"\");\n    // setCategory(\"\");\n    // setCategories(\"\");\n    navigate(\"/expenses\");\n  };\n\n  useEffect(() => {\n    getOneExpense(params.id);\n    getCategories();\n  }, []);\n  console.log(\"Daaaaaatee: \" + slicedDate);\n\n  return (\n    <>\n      <Nav />\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Edit Your Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            // defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            // defaultValue={slicedDate}\n            // defaultValue={date.slice(0, 10)}\n            value={date.slice(0, 10)}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            value={String(category)}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Edit Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default EditExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/components/Expense/NewExpense.jsx",["54","55","56"],[],"import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Autocomplete,\n  Button,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport Nav from \"../Nav/Nav\";\n\nconst NewExpense = () => {\n  const [item, setItem] = useState(\"\");\n  const [amount, setAmount] = useState(null);\n  const [date, setDate] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [categories, setCategories] = useState({});\n\n  const submitHandler = () => {\n    const newProduct = {\n      item,\n      amount,\n      date,\n      category,\n    };\n    console.log(typeof date);\n\n    console.log(\"Submiting\");\n    axios.post(\"/expenses/new\", newProduct);\n\n    setItem(\"\");\n    setAmount(0);\n    setDate(\"\");\n    setCategory(\"\");\n    setCategories(\"\");\n  };\n\n  const getCategories = async () => {\n    const expenses = await axios.get(\"/expenses\");\n    const categories = [];\n    for (let i = 0; i < expenses.data.length; i++) {\n      // console.log(\"Category #\" + i);\n      if (expenses.data[i].category) {\n        categories.push(expenses.data[i].category);\n      }\n    }\n    const uniqueCategories = [...new Set(categories)];\n    console.log(\"Categories Type: \" + typeof uniqueCategories);\n    setCategories(uniqueCategories);\n    // return uniqueCategories;\n  };\n\n  useEffect(() => {\n    getCategories();\n    console.log(\"in useEffect\" + categories);\n  }, []);\n  return (\n    <>\n      <Nav />\n      <Box\n        sx={{\n          height: \"100vh\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          // border: \"3px solid green\",\n        }}\n      >\n        <Stack\n          spacing={2}\n          sx={{\n            margin: \"2rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            // border: \"2px solid red\",\n            width: \"600px\",\n            alignItems: \"center\",\n            margin: \"3rem auto\",\n            padding: \"2rem\",\n          }}\n        >\n          <Typography\n            variant=\"h3\"\n            color=\"primary.light\"\n            sx={{ letterSpacing: \"4px\" }}\n          >\n            Enter A New Expense\n          </Typography>\n          <TextField\n            variant=\"outlined\"\n            label=\"Item\"\n            onChange={(e) => setItem(e.target.value)}\n            fullWidth\n            value={item}\n          />\n          <TextField\n            type=\"number\"\n            variant=\"outlined\"\n            label=\"Amount\"\n            onChange={(e) => setAmount(e.target.value)}\n            fullWidth\n            value={amount}\n          />\n          <TextField\n            label=\"Date\"\n            type=\"date\"\n            defaultValue={new Date()}\n            onChange={(e) => setDate(e.target.value)}\n            fullWidth\n            value={date}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n          {/* <TextField\n            variant=\"outlined\"\n            label=\"Category\"\n            onChange={(e) => setCategory(e.target.value)}\n            fullWidth\n            value={category}\n          /> */}\n          <Autocomplete\n            options={categories}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                label=\"Category\"\n                onChange={(e, newCategory) => setCategory(e.target.value)}\n              />\n            )}\n            onChange={(e) => setCategory(e.target.innerText)}\n            freeSolo\n            fullWidth\n            value={category}\n          />\n          <Button variant=\"outlined\" onClick={submitHandler}>\n            Add New Expense\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n};\n\nexport default NewExpense;\n","/Users/sinarafieefar/Projects/FullStack/Projects/ExpenseTracker/server/client/src/styles/Nav/Nav.styled.js",[],[],{"ruleId":"57","severity":1,"message":"58","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":5,"column":10,"nodeType":"59","messageId":"60","endLine":5,"endColumn":21},{"ruleId":"57","severity":1,"message":"62","line":8,"column":3,"nodeType":"59","messageId":"60","endLine":8,"endColumn":7},{"ruleId":"57","severity":1,"message":"63","line":9,"column":3,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},{"ruleId":"57","severity":1,"message":"64","line":10,"column":3,"nodeType":"59","messageId":"60","endLine":10,"endColumn":7},{"ruleId":"57","severity":1,"message":"65","line":11,"column":3,"nodeType":"59","messageId":"60","endLine":11,"endColumn":8},{"ruleId":"57","severity":1,"message":"66","line":21,"column":3,"nodeType":"59","messageId":"60","endLine":21,"endColumn":7},{"ruleId":"57","severity":1,"message":"65","line":6,"column":3,"nodeType":"59","messageId":"60","endLine":6,"endColumn":8},{"ruleId":"57","severity":1,"message":"67","line":26,"column":10,"nodeType":"59","messageId":"60","endLine":26,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":78,"column":6,"nodeType":"70","endLine":78,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":102,"column":13,"nodeType":"74","messageId":"75","endLine":102,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"68","severity":1,"message":"76","line":59,"column":6,"nodeType":"70","endLine":59,"endColumn":8,"suggestions":"77"},{"ruleId":"72","severity":1,"message":"73","line":81,"column":13,"nodeType":"74","messageId":"75","endLine":81,"endColumn":19},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Stack' is defined but never used.","'Icon' is defined but never used.","'expense' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["78"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","React Hook useEffect has a missing dependency: 'categories'. Either include it or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [params.id]",{"range":"84","text":"85"},"Update the dependencies array to be: [categories]",{"range":"86","text":"87"},[2181,2183],"[params.id]",[1482,1484],"[categories]"]